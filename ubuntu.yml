- hosts: all
  vars:
    workfiles:
      - bash.sh
      - html.html
      - java.java
      - latex.tex
      - php.php
      - text.txt
      - data.dat
      - email.md
      - json.json
      - markdown.md
      - python.py
      - bibliography.bib
      - yaml.yml
      - xml.xml
      - temp.tmp
  pre_tasks:
  - name: Check version
    import_tasks: tasks/ansible_version.yml
  - name: Register current user name
    import_tasks: tasks/user_name.yml
  - name: Check version
    import_tasks: tasks/version.yml
    tags:
      - user
      - global
  roles:
  - role: internetguru.chrome
    tags:
      - global
  - role: geerlingguy.java
    tags:
      - global
    ignore_errors: yes

  tasks:

  - name: Install GNOME Shell Extensions CLI
    apt:
      name: gnome-shell-extensions
      state: present
    tags:
      - global

  - name: Install GNOME Extensions (Dash to Panel)
    shell: |
      gnome-extensions install --force https://extensions.gnome.org/extension-data/dash-to-paneljderose9.github.com.v45.shell-extension.zip
      gnome-extensions enable dash-to-panel@jderose9.github.com
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user

  - name: Install GNOME Extensions (Date Menu Formatter)
    shell: |
      gnome-extensions install --force https://extensions.gnome.org/extension-data/date-menu-formattermarcinjak.pl.v15.shell-extension.zip
      gnome-extensions enable date-menu-formatter@marcinjak.pl
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user

  - name: Set default browser
    shell: xdg-settings set default-web-browser google-chrome.desktop
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user
  - name: Create ~/.config/google-chrome/
    file:
      path: '/home/{{ username.stdout }}/.config/google-chrome/'
      state: directory
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user
  - name: Touch google-chrome first run file
    file:
      path: '/home/{{ username.stdout }}/.config/google-chrome/First Run'
      state: touch
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user
  - name: Add variety ppa
    shell:
      cmd: add-apt-repository ppa:variety/stable
    tags:
      - global
  - name: Install slack
    apt:
      deb: https://downloads.slack-edge.com/desktop-releases/linux/x64/4.39.95/slack-desktop-4.39.95-amd64.deb
    tags:
      - global
  - name: Install packages
    apt:
      pkg:
      - gnome-screensaver
      - gnome-session
      - gnome-settings-daemon
      - gnome-tweaks
      - python3-pip
      - kolourpaint
      - rtorrent
      - rhythmbox
      - mpv
      - wmctrl
      - variety
      - keepass2
      - shellcheck
      - gnome-boxes
      update_cache: yes
    tags:
      - global
  - name: Install google remote desktop
    apt:
      deb: https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
    tags:
      - global
  - name: Set lid close behavior to ignore
    lineinfile:
      path: /etc/systemd/logind.conf
      regexp: '^HandleLidSwitch='
      line: HandleLidSwitch=ignore
    tags:
      - global
  - name: Install zoom
    apt:
      deb: https://zoom.us/client/latest/zoom_amd64.deb
    ignore_errors: yes
    tags:
      - global
  - name: Install night-light control script
    copy:
      src: './res/night-light'
      dest: '/usr/local/bin/'
      mode: '0777'
    tags:
      - global
  - name: Force favorites
    community.general.dconf:
      key: '/org/gnome/shell/favorite-apps'
      state: absent
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - force
  - name: Ubuntu config
    import_tasks: tasks/ubuntucfg.yml
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      user
  - name: Load ubuntu shortcuts
    import_tasks: tasks/ubuntukeys.yml
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      user
  - name: Auto install drivers
    shell: 'ubuntu-drivers autoinstall'
    tags:
      - global
  - name: Generate ansible-info file
    shell: '{{ playbook_dir }}/res/ansible-info-generate "{{ playbook_dir }}"'
    become: yes
    tags:
      - global
  - name: Create Desktop folder
    file:
      dest: '/home/{{ username.stdout }}/Desktop/'
      state: directory
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user
  # - name: Set ansible-info.desktop gio permissions
  #   shell: gio set '{{ playbook_dir }}/res/ansible-info.desktop' metadata::trusted true
  #   tags:
  #     - global
  - name: Create ansible-info.desktop link
    file:
      src: '{{ playbook_dir }}/res/ansible-info.desktop'
      dest: '/home/{{ username.stdout }}/Desktop/ansible-info.desktop'
      state: link
    become: yes
    become_user: '{{ username.stdout }}'
    tags:
      - user
  - name: Install variety
    import_tasks: tasks/variety.yml
    become: yes
    become_user: '{{ username.stdout }}'
  - name: Install teamviewer
    import_tasks: tasks/teamviewer.yml
    tags:
      - global
    ignore_errors: yes
  - name: Install sublime
    import_tasks: tasks/sublime.yml

  - name: Install docker
    import_tasks: tasks/docker.yml
    tags: global
  - name: Add user to docker group
    shell: usermod -aG docker '{{ username.stdout }}'
    tags: user
  - name: Create docker home directory
    file:
      path: /home/{{ username.stdout }}/docker
      state: directory
    tags: user
    become: yes
    become_user: '{{ username.stdout }}'
  - name: Configure docker to store images in home directory
    lineinfile:
      path: /etc/docker/daemon.json
      line: '{"data-root": "/home/{{ username.stdout }}/docker"}'
      create: yes
      mode: 0644
      owner: root
      group: root
    tags: user
    become: yes
    become_user: '{{ username.stdout }}'

  - name: Install PHP
    import_tasks: tasks/php.yml
    tags: global
  - name: Install flow
    import_tasks: tasks/flow.yml
    tags: global
  - name: Install butt
    import_tasks: tasks/butt.yml
    tags: global
  - name: Install diff-so-fancy
    import_tasks: tasks/diff-so-fancy.yml
  - name: Create workspace
    import_tasks: tasks/work.yml
  - name: Install Node.js and npm
    apt:
      name:
        - nodejs
        - npm
      update_cache: yes
      state: present
    tags: global
  - name: Remove snap
    apt:
      pkg:
        - snapd
      state: absent
      autoremove: yes
    tags: global
  - name: Install vscode
    import_tasks: tasks/vscode.yml
    tags: global
  - name: Install cursor
    import_tasks: tasks/cursor.yml
    tags: global
